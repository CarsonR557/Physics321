TITLE: PHY321: Classical Mechanics 1
AUTHOR: Homework 4, due Friday February 7
DATE: today

===  Practicalities about  homeworks and projects ===

o You can work in groups (optimal groups are often 2-3 people) or by yourself. If you work as a group you can hand in one answer only if you wish. _Remember to write your name(s)_!
o Homeworks are available Wednesday/Thursday the week before the deadline. The deadline is at the Friday lecture.
o How do I(we)  hand in?  You can hand in the paper and pencil exercises as a hand-written document. For this homework this applies to exercises 1-5. Alternatively, you can hand in everyhting (if you are ok with typing mathematical formulae using say Latex) as a jupyter notebook at D2L. The numerical exercise(s) (exercise 6 here) should always be handed in as a jupyter notebook by the deadline at D2L. 

=== Introduction to homework 4 ===

This week's sets of classical pen and paper and computational
exercises deal with simple motion problems and conservation laws; energy, momentum and angular momentum. These conservation laws are central in Physics and understanding them properly lays the foundation for understanding and analyzing more complicated physics problems.
The relevant reading background is
o chapters 3, 4.1, 4.2 and 4.3 of Taylor (there are many good examples there) and
o chapters 10-12 of Malthe-Sørenssen.
In both textbooks there are many nice worked out examples. Malthe-Sørenssen's text contains also several coding examples you may find useful. 

The numerical homework focuses on another motion problem where you can
use the code you developed in homework 3, almost entirely. Please take
a look at the posted solution (jupyter-notebook) for homework 3. You
need only to change the forces at play. The problem at hand is a
classic, the gravitational force acting between the sun and the
earth. Here you will notice also that the standard Euler-integration
algorithm is not the best choice and we will introduce the so-called
Euler-Cromer method and the Velocity-Verlet method. These methods will
give much more stable numerical results with only few additions to
your code.

The code you develop here will also be reused when we analyze energy
conservation in homework set 5.

=== Exercise 1 (10 pt), Conservation laws, Energy and momentum ===

* 1a (2pt) How do we define a conservative force?
* 1b (4pt) Use the work-energy theorem to show that energy is conserved with a conservative force.
* 1c (4pt) Assume that you have only internal two-body forces acting on $N$ objectsin an isolated system. The force from object $i$ on object $j$ is $\bm{F}_{ij}$. Show that the linear momentum is conserved.

=== Exercise 2 (10 pt), Conservation of angular momentum ===

* 2a (2pt) Define angular momentum and the torque for a single object with external forces only. 
* 2b (4pt) Define angular momentum and the torque for a system with $N$ objects/particles  with external and internal forces. The force from object $i$ on object $j$ is $\bm{F}_{ij}$.
* 2c (4pt) With internal forces only, what is the mathematical form of the forces that allows for angular momentum to be conserved? 

=== Exsercise 3 (10pt), Example of potential ===

Consider a particle of mass $m$ moving according to the potential
!bt
\[
V(x,y,z)=A\exp\left\{-\frac{x^2+z^2}{2a^2}\right\}.
\]
!et

* 3a (2pt) Is energy conserved? If so, why?
* 3b (4pt) Which of  the quantities, $p_x,p_y,p_z$ are conserved?
* 3c (4pt) Which of  the quantities, $L_x,L_y,L_z$ are conserved?

===  Exercise 4 (10pt), Angular momentum case ===

At $t=0$s we have a single object with position $\bm{r}_0=x_0\bm{e}_x+y_0\bm{e}_y$.We add also a force in the $x$-direction at $t=0$. We assume that the object is at rest at $t=0$. 
!bt
\[
\bm{F} = F\bm{e}_x.
\]
!et

* 4a (3pt) Find the velocity and momentum at a given time $t$ by integrating over time with the above 
* 4b (3pt) Find also the position at a time $t$. 
* 4c (4pt) Use the position and the momentum to find the angular momentum and the torque. Is angular momentum conserved?

=== Exercise 5 (10pt), forces  and potentials  ===

A particle of mass $m$ has velocity $v=\alpha/x$, where $x$ is its displacement.

* 5a (3pt) Find the force $F(x)$ responsible for the motion.

A particle is thereafter under the influence of a force $F=-kx+kx^3/\alpha^2$, where $k$ and $\alpha$ are constants and $k$ is positive.

* 5b (3pt) Determine $U(x)$  and discuss the motion. It can be convenient here to make a sketch/plot of the potential as function of $x$.
* 5c (4pt)  What happens when the energy of the particle is $E=(1/4)k\alpha^2$? Hint: what is the maximum value of the potential energy?

===  Exercise 6 (10pt), Warming up for the Earth-Sun system, Scaling the Equations  ===



===  Exercise 7 (40pt), Numerical elements, solving exercise 6 numerically  ===

_This exercise should be handed in as a jupyter-notebook_ at D2L. Remember to write your name(s). 

Last week we:
o Gained more practice with plotting in Python
o Became familiar with arrays and representing vectors with such objects
 
This week we will:
o Learn and utilize Euler's Method to find the position and the velocity
o Compare analytical and computational solutions 
o Add additional forces to our model


!bc pycod
# let's start by importing useful packages we are familiar with
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
!ec





In the first part however, we will limit ourselves (in order to test the algorithm)to a hypothetical solar system
with the Earth only orbiting around the sun.
The only force in the problem is gravity. Newton's law of gravitation  is given by a force $F_G$
\[
F_G=\frac{GM_{\odot}M_{\mathrm{Earth}}}{r^2},
\]
where $M_{\odot}$ is the mass of the Sun and $M_{\mathrm{Earth}}$ is the mass of the Earth. The gravitational constant is $G$ and $r$ is the distance between the Earth and the Sun.
We assume that the Sun has a mass which is much larger 
than that of the Earth. We can therefore safely neglect the 
motion of the Sun in this problem.  In the first part of this project, your aim is to compute the motion
of the the Earth using different methods for solving ordinary differential equations.

We assume that the orbit of the Earth around the Sun 
is co-planar, and we take this to be the $xy$-plane.
Using Newton's second law of motion we get the following equations
\[
\frac{d^2x}{dt^2}=\frac{F_{G,x}}{M_{\mathrm{Earth}}},
\]
and 
\[
\frac{d^2y}{dt^2}=\frac{F_{G,y}}{M_{\mathrm{Earth}}},
\]
where $F_{G,x}$ and $F_{G,y}$ are the $x$ and $y$ components of the gravitational force. 

We will use so-called astronomical units when rewriting our equations. 
Using astronomical units (AU as abbreviation)it means that 
one astronomical unit of length, known as 1 AU, is the average distance between the Sun and Earth, that is
$1$ AU = $1.5\times 10^{11}$ m.  It can also be convenient to use years instead of seconds since years match
better the time evolution of the solar system. The mass of the Sun is $M_{\mathrm{sun}}=M_{\odot}=2\times 10^{30}$ kg. The masses of all relevant planets and their distances from the sun are listed in the table here in kg and AU.

|----------------------------------------------------|
| Planet |  Mass in kg |  Distance to  sun in AU     |
|----------------------------------------------------|
| Earth |$M_{\mathrm{Earth}}=6\times 10^{24}$ kg | 1AU|
| Jupiter |$M_{\mathrm{Jupiter}}=1.9\times 10^{27}$ kg |5.20 AU|
| Mars  | $M_{\mathrm{Mars}}=6.6\times 10^{23}$ kg |1.52 AU | 
| Venus | $M_{\mathrm{Venus}}=4.9\times 10^{24}$ kg | 0.72 AU| 
| Saturn |$M_{\mathrm{Saturn}}=5.5\times 10^{26}$ kg| 9.54 AU | 
| Mercury | $M_{\mathrm{Mercury}}=3.3\times 10^{23}$ kg | 0.39 AU | 
| Uranus  | $M_{\mathrm{Uranus}}=8.8\times 10^{25}$ kg | 19.19 AU | 
| Neptun | $M_{\mathrm{Neptun}}=1.03\times 10^{26}$ kg | 30.06 AU |
| Pluto | $M_{\mathrm{Pluto}}=1.31\times 10^{22}$ kg  | 39.53 AU |
|----------------------------------------------------|


In setting up the equations we can limit ourselves to a co-planar motion and use only the $x$ and $y$ coordinates. But you should feel free to extend your equations to three dimensions, it is not very difficult and the data from NASA are all in three dimensions.

"NASA":"http://www.nasa.gov/index.html" has an excellent site at URL:"http://ssd.jpl.nasa.gov/horizons.cgi#top".
From there you can extract initial conditions in order to start your differential equation solver.
At the above website you need to change from _OBSERVER_ to _VECTOR_ and then write in the planet you are interested in.
The generated data contain the $x$, $y$ and $z$ values as well as their corresponding velocities. The velocities are in units of AU per day.
Alternatively they can be obtained in terms of km and km/s. 

For the first system below involving only the Earth and the Sun, you could just initialize the position with say $x=1$ AU
and $y=0$ AU. 


=== Project 3a): The Earth-Sun system  ===

We assume that mass units can be obtained by using the fact that Earth's orbit is almost circular around the Sun.
For circular motion we know that the force must obey the following relation
\[
F_G= \frac{M_{\mathrm{Earth}}v^2}{r}=\frac{GM_{\odot}M_{\mathrm{Earth}}}{r^2},
\]
where $v$ is the velocity of Earth. 
The latter equation can be used to show that
\[
v^2r=GM_{\odot}=4\pi^2\mathrm{AU}^3/\mathrm{yr}^2.
\]
Discretize the above differential equations and set up an algorithm for solving these equations using Euler's forward algorithm and the so-called velocity Verlet method discussed in the lecture notes and lecture slides (see for example chapter 8 of the lecture notes).



Write then a program which solves the above differential equations for the Earth-Sun system
using Euler's  method and the velocity Verlet method.  Write these codes without object orientation first in order to make sure everything is running correctly. Thereafter you should start planning to object orient your code.
Try to figure out which parts and operations could be written as classes
and generalized.  
Your task here is to think of the program flow and figure out which parts can be abstracted and reused for many types of operations. 



Find out which initial value for the velocity that gives a circular orbit
and test the stability of your algorithm as function of different time steps $\Delta t$. 
Make a plot of the results you obtain for the position of the Earth (plot the $x$ and $y$ values and/or if you prefer to use three dimensions the $z$-value as well) orbiting  the Sun.

Check also for the case of a circular orbit that both the kinetic and the potential energies are conserved.
Check also if the  angular momentum is conserved. Explain why these quantities
should be conserved.

Discuss eventual differences between the Verlet algorithm and the Euler algorithm. Consider also the number of FLOPs involved and perform a timing of the
two algorithms for equal final times.


Consider then a planet which begins at a distance of 1 AU from the sun. Find out by trial and error
what the initial velocity must be in order for the planet to escape from the sun.  Can you find an exact answer?  How does that match your numerical results?

Try also to change the gravitional force, by replacing 
\[
F_G=\frac{GM_{\odot}M_{\mathrm{Earth}}}{r^2},
\]
with
\[
F_G=\frac{GM_{\odot}M_{\mathrm{Earth}}}{r^{\beta}},
\]
where you let $\beta\in [2,3]$. What happens to the earth-sun system when $\beta$ creeps towards $3$? Comment your results.

